{"version":3,"sources":["assets/scripts/utils/BaseMd5.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n\n/**\n *  md5 加密封装\n */\nexport default class BaseMd5 \n{\n    private static m_Instance : BaseMd5 = null;\n    public static Instance():BaseMd5\n    {\n        if(null == this.m_Instance)\n        {\n            this.m_Instance = new BaseMd5();\n        }\n        return this.m_Instance;\n    }\n\n    public constructor() \n    {\n    }\n\n    /*\n     * Configurable variables. You may need to tweak these to be compatible with\n     * the server-side, but the defaults work in most cases.\n     */\n    private hexcase = 0; /* hex output format. 0 - lowercase; 1 - uppercase  */\n    private b64pad = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance */\n    private chrsz = 8; /* bits per input character. 8 - ASCII; 16 - Unicode  */\n\n    /*\n     * These are the functions you'll usually want to call\n     * They take string arguments and return either hex or base-64 encoded strings\n     */\n    public hex_md5(s){ return this.binl2hex(this.core_md5(this.str2binl(s), s.length * this.chrsz));}\n    public b64_md5(s){ return this.binl2b64(this.core_md5(this.str2binl(s), s.length * this.chrsz));}\n    public str_md5(s){ return this.binl2str(this.core_md5(this.str2binl(s), s.length * this.chrsz));}\n    public hex_hmac_md5(key, data) { return this.binl2hex(this.core_hmac_md5(key, data)); }\n    public b64_hmac_md5(key, data) { return this.binl2b64(this.core_hmac_md5(key, data)); }\n    public str_hmac_md5(key, data) { return this.binl2str(this.core_hmac_md5(key, data)); }\n    /*\n     * Perform a simple self-test to see if the VM is working\n     */\n    public md5_vm_test()\n    {\n     return this.hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\n    }\n    /*\n     * Calculate the MD5 of an array of little-endian words, and a bit length\n     */\n    private core_md5(x, len)\n    {\n     /* append padding */\n     x[len >> 5] |= 0x80 << ((len) % 32);\n     x[(((len + 64) >>> 9) << 4) + 14] = len;\n     var a = 1732584193;\n     var b = -271733879;\n     var c = -1732584194;\n     var d = 271733878;\n     for(var i = 0; i < x.length; i += 16)\n     {\n     var olda = a;\n     var oldb = b;\n     var oldc = c;\n     var oldd = d;\n     a = this.md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n     d = this.md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n     c = this.md5_ff(c, d, a, b, x[i+ 2], 17, 606105819);\n     b = this.md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n     a = this.md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n     d = this.md5_ff(d, a, b, c, x[i+ 5], 12, 1200080426);\n     c = this.md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n     b = this.md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n     a = this.md5_ff(a, b, c, d, x[i+ 8], 7 , 1770035416);\n     d = this.md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n     c = this.md5_ff(c, d, a, b, x[i+10], 17, -42063);\n     b = this.md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n     a = this.md5_ff(a, b, c, d, x[i+12], 7 , 1804603682);\n     d = this.md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n     c = this.md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n     b = this.md5_ff(b, c, d, a, x[i+15], 22, 1236535329);\n     a = this.md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n     d = this.md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n     c = this.md5_gg(c, d, a, b, x[i+11], 14, 643717713);\n     b = this.md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n     a = this.md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n     d = this.md5_gg(d, a, b, c, x[i+10], 9 , 38016083);\n     c = this.md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n     b = this.md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n     a = this.md5_gg(a, b, c, d, x[i+ 9], 5 , 568446438);\n     d = this.md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n     c = this.md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n     b = this.md5_gg(b, c, d, a, x[i+ 8], 20, 1163531501);\n     a = this.md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n     d = this.md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n     c = this.md5_gg(c, d, a, b, x[i+ 7], 14, 1735328473);\n     b = this.md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n     a = this.md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n     d = this.md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n     c = this.md5_hh(c, d, a, b, x[i+11], 16, 1839030562);\n     b = this.md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n     a = this.md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n     d = this.md5_hh(d, a, b, c, x[i+ 4], 11, 1272893353);\n     c = this.md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n     b = this.md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n     a = this.md5_hh(a, b, c, d, x[i+13], 4 , 681279174);\n     d = this.md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n     c = this.md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n     b = this.md5_hh(b, c, d, a, x[i+ 6], 23, 76029189);\n     a = this.md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n     d = this.md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n     c = this.md5_hh(c, d, a, b, x[i+15], 16, 530742520);\n     b = this.md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n     a = this.md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n     d = this.md5_ii(d, a, b, c, x[i+ 7], 10, 1126891415);\n     c = this.md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n     b = this.md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n     a = this.md5_ii(a, b, c, d, x[i+12], 6 , 1700485571);\n     d = this.md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n     c = this.md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n     b = this.md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n     a = this.md5_ii(a, b, c, d, x[i+ 8], 6 , 1873313359);\n     d = this.md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n     c = this.md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n     b = this.md5_ii(b, c, d, a, x[i+13], 21, 1309151649);\n     a = this.md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n     d = this.md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n     c = this.md5_ii(c, d, a, b, x[i+ 2], 15, 718787259);\n     b = this.md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n     a = this.safe_add(a, olda);\n     b = this.safe_add(b, oldb);\n     c = this.safe_add(c, oldc);\n     d = this.safe_add(d, oldd);\n     }\n     return Array(a, b, c, d);\n    }\n    /*\n     * These functions implement the four basic operations the algorithm uses.\n     */\n    private md5_cmn(q, a, b, x, s, t)\n    {\n     return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s),b);\n    }\n    private md5_ff(a, b, c, d, x, s, t)\n    {\n     return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n    private md5_gg(a, b, c, d, x, s, t)\n    {\n     return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n    private md5_hh(a, b, c, d, x, s, t)\n    {\n     return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n    private md5_ii(a, b, c, d, x, s, t)\n    {\n     return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n    /*\n     * Calculate the HMAC-MD5, of a key and some data\n     */\n    private core_hmac_md5(key, data)\n    {\n     var bkey = this.str2binl(key);\n     if(bkey.length > 16) bkey = this.core_md5(bkey, key.length * this.chrsz);\n     var ipad = Array(16), opad = Array(16);\n     for(var i = 0; i < 16; i++)\n     {\n     ipad[i] = bkey[i] ^ 0x36363636;\n     opad[i] = bkey[i] ^ 0x5C5C5C5C;\n     }\n     var hash = this.core_md5(ipad.concat(this.str2binl(data)), 512 + data.length * this.chrsz);\n     return this.core_md5(opad.concat(hash), 512 + 128);\n    }\n    /*\n     * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n     * to work around bugs in some JS interpreters.\n     */\n    private safe_add(x, y)\n    {\n     var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n     var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n     return (msw << 16) | (lsw & 0xFFFF);\n    }\n    /*\n     * Bitwise rotate a 32-bit number to the left.\n     */\n    private bit_rol(num, cnt)\n    {\n     return (num << cnt) | (num >>> (32 - cnt));\n    }\n    /*\n     * Convert a string to an array of little-endian words\n     * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.\n     */\n    private str2binl(str)\n    {\n     var bin = Array();\n     var mask = (1 << this.chrsz) - 1;\n     for(var i = 0; i < str.length * this.chrsz; i += this.chrsz)\n     bin[i>>5] |= (str.charCodeAt(i / this.chrsz) & mask) << (i%32);\n     return bin;\n    }\n    /*\n     * Convert an array of little-endian words to a string\n     */\n    private binl2str(bin)\n    {\n     var str = \"\";\n     var mask = (1 << this.chrsz) - 1;\n     for(var i = 0; i < bin.length * 32; i += this.chrsz)\n     str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\n     return str;\n    }\n    /*\n     * Convert an array of little-endian words to a hex string.\n     */\n    private binl2hex(binarray)\n    {\n     var hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n     var str = \"\";\n     for(var i = 0; i < binarray.length * 4; i++)\n     {\n     str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n       hex_tab.charAt((binarray[i>>2] >> ((i%4)*8 )) & 0xF);\n     }\n     return str;\n    }\n    /*\n     * Convert an array of little-endian words to a base-64 string\n     */\n    private binl2b64(binarray)\n    {\n     var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n     var str = \"\";\n     for(var i = 0; i < binarray.length * 4; i += 3)\n     {\n     var triplet = (((binarray[i >> 2] >> 8 * ( i %4)) & 0xFF) << 16)\n        | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\n        | ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\n     for(var j = 0; j < 4; j++)\n     {\n      if(i * 8 + j * 6 > binarray.length * 32) str += this.b64pad;\n      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n     }\n     }\n     return str;\n    }\n\n}"]}