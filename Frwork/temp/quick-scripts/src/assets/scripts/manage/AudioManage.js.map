{"version":3,"sources":["assets/scripts/manage/AudioManage.ts"],"names":[],"mappings":";;;;;;AAAA,wCAAmC;AAExB,QAAA,SAAS,GAAG;IACnB,WAAW,EAAE,aAAa;IAC1B,WAAW,EAAE,aAAa;IAC1B,aAAa,EAAE,eAAe;IAC9B,aAAa,EAAE,eAAe;IAC9B,eAAe,EAAE,iBAAiB;CACrC,CAAA;AAED;IAQI;;OAEG;IACH;QARQ,aAAQ,GAAW,iCAAiC,CAAC,CAAC,SAAS;QAE/D,iBAAY,GAAqB,IAAI,GAAG,EAAE,CAAC;QAC3C,kBAAa,GAAQ,IAAI,CAAC,CAAE,eAAe;QAM/C,MAAM;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEa,uBAAW,GAAzB;QACI,uCAAuC;QACvC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,EAAE,CAAC,CAAA;QACtD,OAAO,IAAI,CAAC,SAAS,CAAA;IACzB,CAAC;IAED;;OAEG;IACH,qCAAe,GAAf;QACI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACrD,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,CAAC,aAAa,GAAG;gBACjB,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,IAAI;aACd,CAAA;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;aACI;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzC;QAED,+EAA+E;QAC/E,OAAO;QACP,6BAA6B;QAC7B,8BAA8B;QAC9B,IAAI;IACR,CAAC;IAED;;OAEG;IACH,qCAAe,GAAf;QACI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;IACnF,CAAC;IAED;;;OAGG;IACH,oCAAc,GAAd,UAAe,OAAgB;QAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,OAAO,CAAC;QACnC,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,OAAO,EAAE;YACT,MAAM;YACN,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;aACI;YACD,QAAQ;YACR,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAED;;OAEG;IACH,oCAAc,GAAd;QACI,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;IACpC,CAAC;IAED;;;OAGG;IACH,oCAAc,GAAd,UAAe,OAAgB;QAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,OAAO,CAAC;QACnC,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,OAAO,EAAE;YACV,QAAQ;YACR,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAED;;OAEG;IACH,oCAAc,GAAd;QACI,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACH,kCAAY,GAAZ,UAAa,QAAgB,EAAE,QAAkB;QAC7C,MAAM;QACN,IAAI,UAAU,GAAG,EAAE,EACf,UAAU,GAAG,CAAC,CAAC;QACnB,KAAK,IAAI,GAAG,IAAI,iBAAS,EAAE;YACvB,QAAQ;YACR,UAAU,CAAC,IAAI,CAAC,iBAAS,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;QACD,yCAAyC;QAEzC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAEpD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC/C,UAAU,EAAE,CAAC;gBACb,QAAQ;gBACR,IAAI,UAAU,CAAC,MAAM,IAAI,UAAU,EAAE;oBACjC,IAAI,QAAQ,EAAE;wBACV,QAAQ,EAAE,CAAC;qBACd;iBACJ;YACL,CAAC,CAAC,CAAA;SACL;IACL,CAAC;IAED;;;;;OAKG;IACH,sCAAgB,GAAhB,UAAiB,QAAQ,EAAE,UAAU,EAAE,QAAe;QAAtD,iBAaC;QAbsC,yBAAA,EAAA,eAAe;QAClD,IAAI,QAAQ,GAAG,QAAQ,GAAG,GAAG,GAAG,UAAU,CAAC;QAC3C,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,KAAK;YACnC,IAAI,GAAG,EAAE;gBACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnB,OAAO;aACV;YAED,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACzC,IAAI,QAAQ,EAAE;gBACV,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACH,sCAAgB,GAAhB,UAAiB,IAAI,EAAE,UAAU,EAAE,QAAe;QAAlD,iBAYC;QAZkC,yBAAA,EAAA,eAAe;QAC9C,IAAI,QAAQ,GAAG,IAAI,GAAG,UAAU,CAAC;QACjC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,KAAK;YAChC,IAAI,GAAG,EAAE;gBACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnB,OAAO;aACV;YACD,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACzC,IAAI,QAAQ,EAAE;gBACV,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,+BAAS,GAAT,UAAU,UAAU,EAAE,OAAuB;QAAvB,wBAAA,EAAA,cAAuB;QAEzC,QAAQ;QACR,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC3B,OAAO;SACV;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,KAAK,EAAE;YACP,QAAQ;YACR,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjB,OAAO,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACnD;aACI;YACD,eAAK,CAAC,KAAK,CAAC,qCAAqC,EAAE,UAAU,CAAC,CAAC;SAClE;IACL,CAAC;IAED;;;OAGG;IACH,+BAAS,GAAT,UAAU,UAAkB,EAAE,OAAwB;QAAxB,wBAAA,EAAA,eAAwB;QAElD,QAAQ;QACR,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC3B,OAAO;SACV;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,KAAK,EAAE;YACP,OAAO,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACpD;aACI;YACD,eAAK,CAAC,KAAK,CAAC,qCAAqC,EAAE,UAAU,CAAC,CAAC;SAClE;IACL,CAAC;IAED;;OAEG;IACH,+BAAS,GAAT;QACI,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,gCAAU,GAAV;QACI,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,iCAAW,GAAX;QACI,EAAE,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,+BAAS,GAAT,UAAU,QAAe;QACrB,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACH,kCAAY,GAAZ;QACI,EAAE,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;IAEL,kBAAC;AAAD,CAvPA,AAuPC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import Utils from \"../utils/Utils\";\n\nexport var ResMusics = {\n    Sound_Click: \"sound_click\",\n    Sound_Coins: \"sound_coins\",\n    Sound_MoveEnd: \"sound_moveend\",\n    Sound_Success: \"sound_success\",\n    Sound_Collision: \"sound_collision\",\n}\n\nexport default class AudioManage {\n\n    private static _instance: AudioManage;\n    private _saveKey: string = \"feipaiqieshuiguoaudio2020041701\"; //配置存储key\n\n    private m_AudioCilps: Map<string, any> = new Map();\n    private m_AudioConfig: any = null;  //配置记录着音乐和音效的开关\n\n    /**\n     * 构造函数\n     */\n    constructor() {\n        //读取配置\n        this.LoadAudioConfig();\n    }\n\n    public static getInstance(): AudioManage {\n        // 如果 instance 是一个实例 直接返回，  如果不是 实例化后返回\n        this._instance || (this._instance = new AudioManage())\n        return this._instance\n    }\n\n    /**\n     * 加载音乐配置\n     */\n    LoadAudioConfig() {\n        let data = cc.sys.localStorage.getItem(this._saveKey)\n        if (!data) {\n            this.m_AudioConfig = {\n                Music: true,\n                Sound: true\n            }\n            this.SaveAudioConfig();\n        }\n        else {\n            this.m_AudioConfig = JSON.parse(data);\n        }\n\n        // this.m_AudioConfig = JSON.parse(cc.sys.localStorage.getItem(this._saveKey));\n        // //没有\n        // if (!this.m_AudioConfig) {\n        //     this.SaveAudioConfig();\n        // }\n    }\n\n    /**\n     * 保存音乐配置\n     */\n    SaveAudioConfig() {\n        cc.sys.localStorage.setItem(this._saveKey, JSON.stringify(this.m_AudioConfig));\n    }\n\n    /**\n     * 设置音乐开关\n     * @param {boolean} _switch \n     */\n    SetMusicSwitch(_switch: boolean) {\n        this.m_AudioConfig.Music = _switch;\n        this.SaveAudioConfig();\n\n        if (_switch) {\n            //恢复音乐\n            this.ResumeMusic();\n        }\n        else {\n            //暂停播放音乐\n            this.PauseMusic();\n        }\n    }\n\n    /**\n     * 返回音乐开关\n     */\n    GetMusicSwitch() {\n        return this.m_AudioConfig.Music;\n    }\n\n    /**\n     * 设置音效开关\n     * @param {boolean} _switch \n     */\n    SetSoundSwitch(_switch: boolean) {\n        this.m_AudioConfig.Sound = _switch;\n        this.SaveAudioConfig();\n\n        if (!_switch) {\n            //停止播放音乐\n            this.StopAllSound();\n        }\n    }\n\n    /**\n     * 返回音效开关\n     */\n    GetSoundSwitch() {\n        return this.m_AudioConfig.Sound;\n    }\n\n    /**\n     * 初始化本地音乐\n     * @param {string} _pathUrl //资源路径\n     * @param {Function} _callFun  //资源加载成功回调函数\n     */\n    InitResAudio(_pathUrl: string, _callFun: Function) {\n        //加载音乐\n        let musicarray = [],\n            loadresnum = 0;\n        for (let key in ResMusics) {\n            //往数组中放值\n            musicarray.push(ResMusics[key]);\n        }\n        // Utils.CCLog('musicarray', musicarray);\n\n        for (let index = 0; index < musicarray.length; index++) {\n\n            this.LoadResAudioCilp(_pathUrl, musicarray[index], () => {\n                loadresnum++;\n                //资源加载完毕\n                if (musicarray.length == loadresnum) {\n                    if (_callFun) {\n                        _callFun();\n                    }\n                }\n            })\n        }\n    }\n\n    /**\n     * 加载本地音乐\n     * @param {string} _pathUrl //资源路径\n     * @param {string} _musicname\n     * @param {Function} _callFun \n     */\n    LoadResAudioCilp(_pathUrl, _musicname, _callFun = null) {\n        let audiourl = _pathUrl + \"/\" + _musicname;\n        cc.loader.loadRes(audiourl, (err, audio) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            this.m_AudioCilps.set(_musicname, audio);\n            if (_callFun) {\n                _callFun(audio);\n            }\n        });\n    }\n\n    /**\n     * 网络远程预加载音效\n     * @param {string} _url \n     * @param {string} _musicname \n     * @param {Function} _callFun \n     */\n    LoadNetAudioCilp(_url, _musicname, _callFun = null) {\n        let audiourl = _url + _musicname;\n        cc.loader.load(audiourl, (err, audio) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            this.m_AudioCilps.set(_musicname, audio);\n            if (_callFun) {\n                _callFun(audio);\n            }\n        });\n    }\n\n    /**\n     * 播放背景音乐\n     * @param {string} _musicname \n     * @param {boolean} _isLoop\n     */\n    PlayMusic(_musicName, _isLoop: boolean = true): number {\n\n        //音乐开关打开\n        if (!this.m_AudioConfig.Music) {\n            return;\n        }\n\n        let audio = this.m_AudioCilps.get(_musicName);\n        if (audio) {\n            //停止当前音乐\n            this.StopMusic();\n\n            return cc.audioEngine.playMusic(audio, _isLoop);\n        }\n        else {\n            Utils.CCLog('audio resources not load _musicname', _musicName);\n        }\n    }\n\n    /**\n     * 播放音效\n     * @param {string} _soundname \n     */\n    PlaySound(_soundname: string, _isLoop: boolean = false): number {\n\n        //音效开关打开\n        if (!this.m_AudioConfig.Sound) {\n            return;\n        }\n\n        let audio = this.m_AudioCilps.get(_soundname);\n        if (audio) {\n            return cc.audioEngine.playEffect(audio, _isLoop);\n        }\n        else {\n            Utils.CCLog('audio resources not load _soundname', _soundname);\n        }\n    }\n\n    /**\n     * 停止背景音乐\n     */\n    StopMusic() {\n        cc.audioEngine.stopMusic();\n    }\n\n    /**\n     * 暂停背景音乐\n     */\n    PauseMusic() {\n        cc.audioEngine.pauseMusic();\n    }\n\n    /**\n     * 恢复背景音乐\n     */\n    ResumeMusic() {\n        cc.audioEngine.resumeMusic();\n    }\n\n    /**\n     * 停止指定音效\n     */\n    StopSound(_soundID:number) {\n        cc.audioEngine.stopEffect(_soundID);\n    }\n\n    /**\n     * 停止全部音效\n     */\n    StopAllSound() {\n        cc.audioEngine.stopAllEffects();\n    }\n\n}"]}