{"version":3,"sources":["assets/scripts/manage/RankManage.ts"],"names":[],"mappings":";;;;;;AAAA,wCAAmC;AACnC,sCAAiC;AAEjC,2CAAsC;AAEtC;IAWI;;OAEG;IACH;QAVQ,cAAS,GAAW,EAAE,CAAC,CAAC,IAAI;QAC5B,gBAAW,GAAW,mCAAmC,CAAC,CAAC,SAAS;QAEpE,iBAAY,GAAW,WAAW,CAAC,CAAC,UAAU;QAC9C,mBAAc,GAAW,QAAQ,CAAC,CAAC,OAAO;QAC1C,gBAAW,GAAW,6BAA6B,CAAC,CAAC,OAAO;IAMpE,CAAC;IAEa,sBAAW,GAAzB;QACI,uCAAuC;QACvC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU,EAAE,CAAC,CAAA;QACrD,OAAO,IAAI,CAAC,SAAS,CAAA;IACzB,CAAC;IAED;;;;OAIG;IACI,6BAAQ,GAAf,UAAgB,QAAgB;QAC5B,MAAM;QACN,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED;;;;;;;OAOG;IACI,kCAAa,GAApB;QAAA,iBAoBC;QAnBG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBACxB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBACzB;qBACI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBAC7B,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBACjD;qBACI;oBACD,MAAM,CAAC,IAAI,CAAC,CAAC;iBAChB;YACL,CAAC,EAAE,UAAC,MAAM;gBACN,gDAAgD;gBAChD,MAAM,CAAC,MAAM,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,2CAAsB,GAAtB;QAAA,iBAuCC;QAtCG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,iBAAiB;YACjB,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,EAAE;gBACjC,MAAM,CAAC,eAAe,CAAC,CAAC;aAC3B;YAED,IAAI,QAAQ,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC3F,IAAI,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAE9F,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;YAC5C,uEAAuE;YAEvE,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBACxB,yCAAyC;oBACzC,OAAO,CAAC,wBAAwB,CAAC,CAAC;iBACrC;qBACI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBAC7B,+DAA+D;oBAC/D,MAAM,CAAC,+BAA+B,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAC1D;qBACI;oBACD,mDAAmD;oBACnD,MAAM,CAAC,IAAI,CAAC,CAAC;iBAChB;YACL,CAAC,EAAE,UAAC,MAAM;gBACN,qDAAqD;gBACrD,MAAM,CAAC,4BAA4B,GAAG,MAAM,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAA;IACN,CAAC;IAED;;;;OAIG;IACH,wCAAmB,GAAnB,UAAoB,KAAkB;QAAtC,iBAoCC;QApCmB,sBAAA,EAAA,kBAAkB;QAClC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,iBAAiB;YACjB,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,EAAE;gBACjC,MAAM,CAAC,eAAe,CAAC,CAAC;aAC3B;YACD,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,IAAI,KAAK,IAAI,UAAU,EAAE;gBACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;aAChE;iBACI;gBACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC/B;YAED,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,iDAAiD;gBACjD,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBACxB,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,eAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oBAC5D,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,eAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;oBACpE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpB;qBACI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBAC7B,MAAM,CAAC,4BAA4B,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBACvD;qBACI;oBACD,MAAM,CAAC,IAAI,CAAC,CAAC;iBAChB;YACL,CAAC,EAAE,UAAC,MAAM;gBACN,MAAM,CAAC,4BAA4B,GAAG,MAAM,CAAC,CAAA;YACjD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,2CAAsB,GAAtB;QAAA,iBAgCC;QA/BG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,iBAAiB;YACjB,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,EAAE;gBACjC,MAAM,CAAC,eAAe,CAAC,CAAC;aAC3B;YACD,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YAE7D,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBACxB,4CAA4C;oBAC5C,OAAO,CAAC,2BAA2B,CAAC,CAAC;iBACxC;qBACI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBAC7B,eAAK,CAAC,KAAK,CAAC,+BAA+B,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC5D,MAAM,CAAC,+BAA+B,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAC1D;qBACI;oBACD,qBAAqB;oBACrB,MAAM,CAAC,IAAI,CAAC,CAAC;iBAChB;YACL,CAAC,EAAE,UAAC,MAAM;gBACN,yDAAyD;gBACzD,MAAM,CAAC,+BAA+B,GAAG,MAAM,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAA;IACN,CAAC;IAED;;;;OAIG;IACH,wCAAmB,GAAnB,UAAoB,MAAkB;QAAtC,iBAkCC;QAlCmB,uBAAA,EAAA,UAAkB;QAClC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,iBAAiB;YACjB,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,EAAE;gBACnE,MAAM,CAAC,eAAe,CAAC,CAAC;aAC3B;YACD,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,GAAG,MAAM,CAAC,CAAC;YAEzC,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBACxB,wDAAwD;oBACxD,OAAO,CAAC,wBAAwB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBACpD;qBACI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBAC7B,4DAA4D;oBAC5D,MAAM,CAAC,4BAA4B,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBACvD;qBACI;oBACD,qBAAqB;oBACrB,MAAM,CAAC,IAAI,CAAC,CAAC;iBAChB;YACL,CAAC,EAAE,UAAC,MAAM;gBACN,sDAAsD;gBACtD,MAAM,CAAC,4BAA4B,GAAG,MAAM,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAA;IACN,CAAC;IAED;;;;OAIG;IACH,2CAAsB,GAAtB,UAAuB,MAAU;QAAjC,iBAkCC;QAlCsB,uBAAA,EAAA,UAAU;QAC7B,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,iBAAiB;YACjB,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,EAAE;gBACnE,MAAM,CAAC,eAAe,CAAC,CAAC;aAC3B;YACD,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,GAAG,MAAM,CAAC,CAAC;YAEzC,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBACxB,2DAA2D;oBAC3D,OAAO,CAAC,2BAA2B,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBACvD;qBACI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBAC7B,+DAA+D;oBAC/D,MAAM,CAAC,+BAA+B,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAC1D;qBACI;oBACD,qBAAqB;oBACrB,MAAM,CAAC,IAAI,CAAC,CAAC;iBAChB;YACL,CAAC,EAAE,UAAC,MAAM;gBACN,yDAAyD;gBACzD,MAAM,CAAC,+BAA+B,GAAG,MAAM,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAA;IACN,CAAC;IAED;;OAEG;IACH,oCAAe,GAAf;QAAA,iBAmCC;QAlCG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,iBAAiB;YACjB,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,EAAE;gBACtE,MAAM,CAAC,eAAe,CAAC,CAAC;aAC3B;YACD,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;YAE7C,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,iDAAiD;gBACjD,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBACxB,IAAI,CAAC,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE;wBAClC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,eAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;wBAChF,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,GAAG,eAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;qBAC3F;oBAED,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpB;qBACI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBAC7B,MAAM,CAAC,4BAA4B,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBACvD;qBACI;oBACD,MAAM,CAAC,IAAI,CAAC,CAAC;iBAChB;YACL,CAAC,EAAE,UAAC,MAAM;gBACN,MAAM,CAAC,4BAA4B,GAAG,MAAM,CAAC,CAAA;YACjD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACH,oCAAe,GAAf,UAAgB,WAAe,EAAE,SAAc;QAA/C,iBA+DC;QA/De,4BAAA,EAAA,eAAe;QAAE,0BAAA,EAAA,cAAc;QAC3C,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,iBAAiB;YACjB,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,EAAE;gBACtE,MAAM,CAAC,eAAe,CAAC,CAAC;aAC3B;YAED,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,oBAAU,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,GAAG,WAAW,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,GAAG,SAAS,CAAC,CAAC;YAE1C,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,eAAK,CAAC,KAAK,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;gBAC1C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;wBACxB,MAAM,CAAC,wBAAwB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;qBACnD;yBACI;wBAED,IAAI,QAAQ,GAAG;4BACX,QAAQ,EAAE,EAAE;4BACZ,QAAQ,EAAE,EAAE;4BACZ,cAAc,EAAE,CAAC;yBACpB,CAAA;wBAED,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;4BAC9C,+CAA+C;4BAE/C,IAAI,CAAC,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,EAAE;gCACtC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,eAAK,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gCACxF,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAa,GAAG,eAAK,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;6BACnG;4BAED,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;gCAC5B,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;6BACvC;iCACI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;gCACjC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;6BACnC;iCACI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;gCACjC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC;6BACxD;yBACJ;wBAED,OAAO,CAAC,QAAQ,CAAC,CAAC;qBACrB;iBACJ;qBACI;oBACD,MAAM,CAAC,sBAAsB,CAAC,CAAC;iBAClC;YAEL,CAAC,EAAE,UAAC,MAAM;gBACN,MAAM,CAAC,wBAAwB,GAAG,MAAM,CAAC,CAAA;YAC7C,CAAC,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,mCAAc,GAAd;QAAA,iBAgCC;QA/BG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,iBAAiB;YACjB,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,IAAI,eAAK,CAAC,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,EAAE;gBACtE,MAAM,CAAC,eAAe,CAAC,CAAC;aAC3B;YACD,IAAI,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;YAE7C,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE1D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,IAAI;gBACnB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBACxB,mDAAmD;oBACnD,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAC/C;qBACI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,OAAO,EAAE;oBAC7B,uDAAuD;oBACvD,MAAM,CAAC,uBAAuB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAClD;qBACI;oBACD,qBAAqB;oBACrB,MAAM,CAAC,IAAI,CAAC,CAAC;iBAChB;YACL,CAAC,EAAE,UAAC,MAAM;gBACN,iDAAiD;gBACjD,MAAM,CAAC,uBAAuB,GAAG,MAAM,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACD,iEAAiE;IACjE;;;;OAIG;IACK,mCAAc,GAAtB,UAAuB,IAAY;QAC/B,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;gBACb,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;aACnD;iBAAM,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE;gBACtB,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC3C;SACJ;QACD,uCAAuC;QACvC,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,iBAAC;AAAD,CArbA,AAqbC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import Utils from \"../utils/Utils\";\nimport Http from \"../utils/Http\";\nimport { BaseConfig } from \"../config/BaseConfig\";\nimport SaveManage from \"./SaveManage\";\n\nexport default class RankManage {\n\n    private static _instance: RankManage;\n\n    private m_NetRoot: string = \"\"; //域名\n    private m_ServerUrl: string = \"/zjserver/zjrank/zjrank/protocol/\"; //排行榜请求网址\n\n    private m_Rank_AppID: string = \"zjkj_qtwz\"; //排行榜appid\n    private m_Rank_Channel: string = \"weixin\"; //排行榜渠道\n    private m_Rank_Name: string = \"qtwz_rank_weixin_2020011301\"; //排行榜名字\n\n    /**\n     * 构造函数\n     */\n    constructor() {\n    }\n\n    public static getInstance(): RankManage {\n        // 如果 instance 是一个实例 直接返回，  如果不是 实例化后返回\n        this._instance || (this._instance = new RankManage())\n        return this._instance\n    }\n\n    /**\n     * 初始化排行榜\n     * @param {string} _netRoot\n     * \n     */\n    public InitRank(_netRoot: string) {\n        //记录域名\n        this.m_NetRoot = _netRoot;\n    }\n\n    /**\n     * 获取服务器时间\n     * DataManage.getInstance().GetServerTime().then((time)=>{\n     *      Utils.CCLog('GetServerTime time', time);\n     *  }).catch((err)=>{\n     *      Utils.CCLog('GetServerTime err', err);\n     *  })\n     */\n    public GetServerTime() {\n        return new Promise((resolve, reject) => {\n            let http = new Http();\n            http.AddParam(\"pid\", \"10001\");\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10001.php\";\n            http.Request(url, (data) => {\n                if (data[0].pid == \"30001\") {\n                    resolve(data[0].time);\n                }\n                else if (data[0].pid == \"40002\") {\n                    reject('GetServerTime errMsg' + data[0].desc);\n                }\n                else {\n                    reject(data);\n                }\n            }, (errMsg) => {\n                // Utils.CCLog('GetServerTime errMsg' + errMsg);\n                reject(errMsg);\n            });\n        });\n    }\n\n    /**\n     * 上传玩家云存档\n     */\n    UploadUserCloudStorage() {\n        return new Promise((resolve, reject) => {\n            //如果没有appid则不上传数据\n            if (Utils.IsNull(this.m_Rank_AppID)) {\n                reject(\"appid is null\");\n            }\n\n            let userName = this.Str_To_Unicode(JSON.stringify(SaveManage.getInstance().GetUserName()));\n            let userHeadUrl = this.Str_To_Unicode(JSON.stringify(SaveManage.getInstance().GetHeadIcon()));\n\n            let http = new Http();\n            http.AddParam(\"pid\", \"10003\");\n            http.AddParam(\"appid\", this.m_Rank_AppID);\n            http.AddParam(\"channel\", this.m_Rank_Channel);\n            http.AddParam(\"uid\", SaveManage.getInstance().GetUserUUID());\n            http.AddParam(\"user_name\", userName);\n            http.AddParam(\"user_head_url\", userHeadUrl);\n            // http.AddParam(\"user_score\", SaveManage.getInstance().GetMaxScore());\n\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10003.php\";\n\n            http.Request(url, (data) => {\n                if (data[0].pid == \"30001\") {\n                    // Utils.CCLog(\"UploadUserCloudData ok\");\n                    resolve(\"UploadUserCloudData ok\");\n                }\n                else if (data[0].pid == \"40002\") {\n                    // Utils.CCLog(\"RemoveUserCloudStorage errMsg\" + data[0].desc);\n                    reject(\"RemoveUserCloudStorage errMsg\" + data[0].desc);\n                }\n                else {\n                    // Utils.CCLog(\"UploadUserCloudData errMsg\", data);\n                    reject(data);\n                }\n            }, (errMsg) => {\n                // Utils.CCLog(\"UploadUserCloudData errMsg\", errMsg);\n                reject(\"UploadUserCloudData errMsg\" + errMsg);\n            });\n        })\n    }\n\n    /**\n     * 下拉玩家云存档\n     * @param {String} _uuid 玩家uuid 默认拉取自己的数据\n     * \n     */\n    GetUserCloudStorage(_uuid = 'selfuuid') {\n        return new Promise((resolve, reject) => {\n            //如果没有appid则不上传数据\n            if (Utils.IsNull(this.m_Rank_AppID)) {\n                reject(\"appid is null\");\n            }\n            let http = new Http();\n            http.AddParam(\"pid\", \"10004\");\n            http.AddParam(\"appid\", this.m_Rank_AppID);\n            http.AddParam(\"channel\", this.m_Rank_Channel);\n            if (_uuid == 'selfuuid') {\n                http.AddParam(\"uid\", SaveManage.getInstance().GetUserUUID());\n            }\n            else {\n                http.AddParam(\"uid\", _uuid);\n            }\n\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10004.php\";\n\n            http.Request(url, (data) => {\n                // Utils.CCLog(\"GetUserCloudStorage data\", data);\n                if (data[0].pid == \"20002\") {\n                    data[0].user_name = Utils.Unicode_To_Str(data[0].user_name);\n                    data[0].user_head_url = Utils.Unicode_To_Str(data[0].user_head_url);\n                    resolve(data[0]);\n                }\n                else if (data[0].pid == \"40002\") {\n                    reject(\"GetUserCloudStorage errMsg\" + data[0].desc);\n                }\n                else {\n                    reject(data);\n                }\n            }, (errMsg) => {\n                reject(\"GetUserCloudStorage errMsg\" + errMsg)\n            });\n        });\n    }\n\n    /**\n     * 清除玩家信息\n     * 慎重使用\n     */\n    RemoveUserCloudStorage() {\n        return new Promise((resolve, reject) => {\n            //如果没有appid则不上传数据\n            if (Utils.IsNull(this.m_Rank_AppID)) {\n                reject(\"appid is null\");\n            }\n            let http = new Http();\n            http.AddParam(\"pid\", \"10010\");\n            http.AddParam(\"appid\", this.m_Rank_AppID);\n            http.AddParam(\"channel\", this.m_Rank_Channel);\n            http.AddParam(\"uid\", SaveManage.getInstance().GetUserUUID());\n\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10010.php\";\n\n            http.Request(url, (data) => {\n                if (data[0].pid == \"30001\") {\n                    // Utils.CCLog(\"RemoveUserCloudStorage ok\");\n                    resolve(\"RemoveUserCloudStorage ok\");\n                }\n                else if (data[0].pid == \"40002\") {\n                    Utils.CCLog(\"RemoveUserCloudStorage errMsg\" + data[0].desc);\n                    reject(\"RemoveUserCloudStorage errMsg\" + data[0].desc);\n                }\n                else {\n                    // Utils.CCLog(data);\n                    reject(data);\n                }\n            }, (errMsg) => {\n                // Utils.CCLog(\"RemoveUserCloudStorage errMsg\" + errMsg);\n                reject(\"RemoveUserCloudStorage errMsg\" + errMsg);\n            });\n        })\n    }\n\n    /**\n     * 上传玩家排行榜分数\n     * 分数以最后一次上传为准\n     * @param {Number} _score 排名依据\n     */\n    RankUploadUserScore(_score: number = 0) {\n        return new Promise((resolve, reject) => {\n            //如果没有appid则不上传数据\n            if (Utils.IsNull(this.m_Rank_AppID) || Utils.IsNull(this.m_Rank_Name)) {\n                reject(\"appid is null\");\n            }\n            let http = new Http();\n            http.AddParam(\"pid\", \"10005\");\n            http.AddParam(\"appid\", this.m_Rank_AppID);\n            http.AddParam(\"channel\", this.m_Rank_Channel);\n            http.AddParam(\"uid\", SaveManage.getInstance().GetUserUUID());\n            http.AddParam(\"rank_name\", this.m_Rank_Name);\n            http.AddParam(\"rank_score\", \"\" + _score);\n\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10005.php\";\n\n            http.Request(url, (data) => {\n                if (data[0].pid == \"30001\") {\n                    // Utils.CCLog(\"RankUploadUserScore ok\" + data[0].desc);\n                    resolve(\"RankUploadUserScore ok\" + data[0].desc);\n                }\n                else if (data[0].pid == \"40002\") {\n                    // Utils.CCLog(\"RankUploadUserScore errMsg\" + data[0].desc);\n                    reject(\"RankUploadUserScore errMsg\" + data[0].desc);\n                }\n                else {\n                    // Utils.CCLog(data);\n                    reject(data);\n                }\n            }, (errMsg) => {\n                // Utils.CCLog(\"RankUploadUserScore errMsg\" + errMsg);\n                reject(\"RankUploadUserScore errMsg\" + errMsg);\n            });\n        })\n    }\n\n    /**\n     * 上传玩家排行榜数据\n     * 分数以最高分为准\n     * @param {Number} _score 排名依据\n     */\n    RankUploadUserMaxScore(_score = 0) {\n        return new Promise((resolve, reject) => {\n            //如果没有appid则不上传数据\n            if (Utils.IsNull(this.m_Rank_AppID) || Utils.IsNull(this.m_Rank_Name)) {\n                reject(\"appid is null\");\n            }\n            let http = new Http();\n            http.AddParam(\"pid\", \"10006\");\n            http.AddParam(\"appid\", this.m_Rank_AppID);\n            http.AddParam(\"channel\", this.m_Rank_Channel);\n            http.AddParam(\"uid\", SaveManage.getInstance().GetUserUUID());\n            http.AddParam(\"rank_name\", this.m_Rank_Name);\n            http.AddParam(\"rank_score\", \"\" + _score);\n\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10006.php\";\n\n            http.Request(url, (data) => {\n                if (data[0].pid == \"30001\") {\n                    // Utils.CCLog(\"RankUploadUserMaxScore ok\" + data[0].desc);\n                    resolve(\"RankUploadUserMaxScore ok\" + data[0].desc);\n                }\n                else if (data[0].pid == \"40002\") {\n                    // Utils.CCLog(\"RankUploadUserMaxScore errMsg\" + data[0].desc);\n                    reject(\"RankUploadUserMaxScore errMsg\" + data[0].desc);\n                }\n                else {\n                    // Utils.CCLog(data);\n                    reject(data);\n                }\n            }, (errMsg) => {\n                // Utils.CCLog(\"RankUploadUserMaxScore errMsg\" + errMsg);\n                reject(\"RankUploadUserMaxScore errMsg\" + errMsg);\n            });\n        })\n    }\n\n    /**\n     * 获取玩家在排行榜内的数据\n     */\n    RankGetUserData() {\n        return new Promise((resolve, reject) => {\n            //如果没有appid则不上传数据\n            if (Utils.IsNull(this.m_Rank_AppID) || Utils.IsNull(this.m_Rank_Channel)) {\n                reject(\"appid is null\");\n            }\n            let http = new Http();\n            http.AddParam(\"pid\", \"10007\");\n            http.AddParam(\"appid\", this.m_Rank_AppID);\n            http.AddParam(\"channel\", this.m_Rank_Channel);\n            http.AddParam(\"uid\", SaveManage.getInstance().GetUserUUID());\n            http.AddParam(\"rank_name\", this.m_Rank_Name);\n\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10007.php\";\n\n            http.Request(url, (data) => {\n                // Utils.CCLog(\"GetUserCloudStorage data\", data);\n                if (data[0].pid == \"20003\") {\n                    if (!Utils.IsNull(data[0].user_info)) {\n                        data[0].user_info.user_name = Utils.Unicode_To_Str(data[0].user_info.user_name);\n                        data[0].user_info.user_head_url = Utils.Unicode_To_Str(data[0].user_info.user_head_url);\n                    }\n\n                    resolve(data[0]);\n                }\n                else if (data[0].pid == \"40002\") {\n                    reject(\"GetUserCloudStorage errMsg\" + data[0].desc);\n                }\n                else {\n                    reject(data);\n                }\n            }, (errMsg) => {\n                reject(\"GetUserCloudStorage errMsg\" + errMsg)\n            });\n        });\n    }\n\n    /**\n     * 获取排行榜用户列表\n     * @param {Number} _rank_start 排名开始的地方\n     * @param {Number} _rank_end  排名结束的地方\n     * \n     */\n    RankGetUserList(_rank_start = 1, _rank_end = 20) {\n        return new Promise((resolve, reject) => {\n            //如果没有appid则不上传数据\n            if (Utils.IsNull(this.m_Rank_AppID) || Utils.IsNull(this.m_Rank_Channel)) {\n                reject(\"appid is null\");\n            }\n\n            let http = new Http();\n            http.AddParam(\"pid\", \"10008\");\n            http.AddParam(\"appid\", this.m_Rank_AppID);\n            http.AddParam(\"channel\", this.m_Rank_Channel);\n            http.AddParam(\"uid\", SaveManage.getInstance().GetUserUUID());\n            http.AddParam(\"rank_name\", this.m_Rank_Name);\n            http.AddParam(\"rank_start\", \"\" + _rank_start);\n            http.AddParam(\"rank_end\", \"\" + _rank_end);\n\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10008.php\";\n\n            http.Request(url, (data) => {\n                Utils.CCLog(\"RankGetUserList data\", data);\n                if (data.length > 0) {\n                    if (data[0].pid == \"40002\") {\n                        reject(\"RankGetUserList errMsg\" + data[0].desc);\n                    }\n                    else {\n\n                        let rankData = {\n                            SelfInfo: {},\n                            UserList: [],\n                            User_Count_All: 0,\n                        }\n\n                        for (let index = 0; index < data.length; index++) {\n                            // Utils.CCLog('RankGetUserList', data[index]);\n\n                            if (!Utils.IsNull(data[index].user_info)) {\n                                data[index].user_info.user_name = Utils.Unicode_To_Str(data[index].user_info.user_name);\n                                data[index].user_info.user_head_url = Utils.Unicode_To_Str(data[index].user_info.user_head_url);\n                            }\n\n                            if (data[index].pid == \"20004\") {\n                                rankData.UserList.push(data[index]);\n                            }\n                            else if (data[index].pid == \"20003\") {\n                                rankData.SelfInfo = data[index];\n                            }\n                            else if (data[index].pid == \"20005\") {\n                                rankData.User_Count_All = data[index].user_count_all;\n                            }\n                        }\n\n                        resolve(rankData);\n                    }\n                }\n                else {\n                    reject(\"RankGetUserList erro\");\n                }\n\n            }, (errMsg) => {\n                reject(\"RankGetUserList errMsg\" + errMsg)\n            });\n\n        });\n    }\n\n    /**\n     * 清除指定排行榜数据\n     * 慎重使用\n     * \n     */\n    RankRemoveData() {\n        return new Promise((resolve, reject) => {\n            //如果没有appid则不上传数据\n            if (Utils.IsNull(this.m_Rank_AppID) || Utils.IsNull(this.m_Rank_Channel)) {\n                reject(\"appid is null\");\n            }\n            let http = new Http();\n            http.AddParam(\"pid\", \"10009\");\n            http.AddParam(\"appid\", this.m_Rank_AppID);\n            http.AddParam(\"channel\", this.m_Rank_Channel);\n            http.AddParam(\"rank_name\", this.m_Rank_Name);\n\n            let url = this.m_NetRoot + this.m_ServerUrl + \"10009.php\";\n\n            http.Request(url, (data) => {\n                if (data[0].pid == \"30001\") {\n                    // Utils.CCLog(\"RankRemoveData ok\" + data[0].desc);\n                    resolve(\"RankRemoveData ok\" + data[0].desc);\n                }\n                else if (data[0].pid == \"40002\") {\n                    // Utils.CCLog(\"RankRemoveData errMsg\" + data[0].desc);\n                    reject(\"RankRemoveData errMsg\" + data[0].desc);\n                }\n                else {\n                    // Utils.CCLog(data);\n                    reject(data);\n                }\n            }, (errMsg) => {\n                // Utils.CCLog(\"RankRemoveData errMsg\" + errMsg);\n                reject(\"RankRemoveData errMsg\" + errMsg);\n            });\n        });\n    }\n    //----------------排行榜end-----------------------------------------\n    /**\n     * 字符串转Unicode编码\n     * @param {string} _str\n     * \n     */\n    private Str_To_Unicode(_str: string) {\n        var unid = '\\\\u';\n        for (let i = 0, len = _str.length; i < len; i++) {\n            if (i < len - 1) {\n                unid += _str.charCodeAt(i).toString(16) + '\\\\u';\n            } else if (i === len - 1) {\n                unid += _str.charCodeAt(i).toString(16);\n            }\n        }\n        // console.log(\"Str_To_Unicode\", unid);\n        return unid;\n    }\n}\n"]}