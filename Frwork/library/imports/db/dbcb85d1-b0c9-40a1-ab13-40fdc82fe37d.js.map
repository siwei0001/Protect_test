{"version":3,"sources":["assets/scripts/manage/MenuManage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Utils from \"../utils/Utils\";\nimport BaseLayer from \"../base/BaseLayer\";\n\nexport var BaseMenu = {\n    GameLoadingMenu: 'prefabs/ui//GameLoadingMenu',\n    MainMenu: 'prefabs/ui//MainMenu',\n    GamePlayMenu:\"prefabs/ui/GamePlayMenu\",\n    ResultMenu: 'prefabs/ui//ResultMenu',\n    PopMenu: 'prefabs/ui//PopMenu',\n    TipsMenu: 'prefabs/ui//TipsMenu',\n}\n\nexport enum UILayer { \n    SCENE,\n    GAME,\n    HUD,\n    POPUP,\n    ALERT,\n    NOTICE,\n    MASK,\n    NUM \n}\n\nexport default class MenuManage {\n\n    private static _instance: MenuManage;\n\n    private m_Menus: Map<string, any> = new Map();\n\n    /**\n     * 构造函数\n     */\n    constructor() {\n    }\n\n    public static getInstance(): MenuManage {\n        // 如果 instance 是一个实例 直接返回，  如果不是 实例化后返回\n        this._instance || (this._instance = new MenuManage())\n        return this._instance\n    }\n\n    /**\n     * 播放转场\n     */\n    PlayTranform() {\n        let tranform = cc.find(\"Canvas/Tranfrom\");\n        if (tranform) {\n            let obj = cc.instantiate(tranform);\n            obj.zIndex = 10000;\n            obj.active = true;\n            obj.parent = this.GetMenuRoot();\n            // tranform.getComponent(cc.ParticleSystem).active = true;\n        }\n    }\n\n    /**\n     * 界面默认绑定的根节点\n     */\n    GetMenuRoot() {\n        var node = cc.find(\"Canvas\");\n        if (node) {\n            return node;\n        }\n        return null;\n    }\n\n    /**\n     * 显示界面\n     * @param {string} _urlName 界面路径\n     * @param {any} _customeData 初始化传入的数据\n     * @param {cc.Node} _parent 父节点\n     * \n     */\n    ShowMenu(_urlName: string, _customeData: any = null, _parent: cc.Node = null) {\n        // Utils.CCLog(\"ShowMenu m_Menus\", this.m_Menus, \"GetMenuRoot:\", this.GetMenuRoot())\n\n        //先判断是否有已显示这个界面\n        if (this.m_Menus.has(_urlName)) {\n            Utils.CCLog(\"ShowMenu menu is show\");\n            return;\n        }\n        else {\n            Utils.CCLog(\"ShowMenu show \");\n            //界面数据\n            let menudata = {\n                node: null\n                // type: _type != null ? _type : MenuType.Type.Normal,//类型没有传值则使用默认值\n            }\n            this.m_Menus.set(_urlName, menudata)\n            this.LoadMenu(_urlName).then((assets) => {\n                let objmenu: any = cc.instantiate(assets); //instantiate(assets);\n                objmenu.parent = _parent != null ? _parent : this.GetMenuRoot();\n                //初始化参数\n                objmenu.getComponent(BaseLayer).Init(_customeData);\n                menudata.node = objmenu;\n                Utils.CCLog(\"objmenu.parent\", objmenu.parent);\n\n            }, (err) => {\n                //加载错误直接将数据删除\n                this.m_Menus.delete(_urlName);\n            })\n            // Utils.CCLog(\"m_Menus\", this.m_Menus);\n        }\n    }\n\n    /**\n     * 移除界面\n     * @param {string} _urlName     界面路径\n     * @param {any} _customeData 释放传入的数据\n     * \n     */\n    RmoveMenu(_urlName: string, _customeData: any = null) {\n\n        let objMenu = this.m_Menus.get(_urlName);\n        if (objMenu) {\n            //判断是否加载完界面\n            if (Utils.IsNull(objMenu.node)) {\n                Utils.CCLog(\"menu loading\")\n                return;\n            }\n            else {\n                //释放函数\n                objMenu.node.getComponent(BaseLayer).Free(_customeData);\n                //销毁界面node\n                objMenu.node.destroy();\n                this.m_Menus.delete(_urlName);\n            }\n        }\n    }\n\n    /**\n     * 加载界面\n     * @param {string} _urlName 界面路径\n     */\n    private LoadMenu(_urlName: string) {\n        return new Promise((resolve, reject) => {\n            cc.loader.loadRes(_urlName, cc.Prefab, (err, assets) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                resolve(assets);\n            });\n        });\n    }\n\n    /**\n     * 返回对应的界面\n     * @param {string} _urlName 界面路径\n     */\n    GetMenu(_urlName: string) {\n        //查找界面是否加载了\n        let objMenu = this.m_Menus.get(_urlName);\n        if (objMenu) {\n            //资源是否加载成功了\n            if (objMenu.node) {\n                return objMenu.node.getComponent(BaseLayer);\n            }\n            else {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n}\n"]}